# (nra_upd_02)
# The '-m' flag tells Python to run a library module as an executable script
# Instead of giving Python a file path to run, you give it a module path. This
# simple change fundamentally alters how Python finds your files and solves many
# common import errors.
#
# Why It's So Useful (The "Path" Problem)
# The key difference is how it affects Python's search path (sys.path), which is
# the list of directories Python checks when you try to import something.
#
# --- Without -m (e.g., python week_3_mls/model_building/data_register.py) ---
# What happens: Python adds the script's own directory (week_3_mls/model_building/)
# to the search path.
# The problem: When your script tries to run 'from week_3_mls.config import ...',
# Python looks for a 'week_3_mls' package inside the 'model_building' folder.
# It doesn't find it, so the program crashes with a 'ModuleNotFoundError'.
#
# --- With -m (e.g., python -m week_3_mls.model_building.data_register) ---
# What happens: Python adds the current working directory (your project's root folder)
# to its search path.
# The solution: When the script runs the same import 'from week_3_mls.config ...',
# Python starts searching from your project's root. It immediately finds the
# 'week_3_mls' package, and the import works perfectly.
#
# Analogy: Using 'python path/to/script.py' is like being teleported into a specific
# room in a large house; you can easily find things in that room, but you have no map
# of the rest of the house. Using 'python -m ...' is like walking in through the
# front doorâ€”you can now navigate to any room using its proper address.

name: Week 3 MLS pipeline

on:
  push:
    branches:
      - main  # Automatically triggers on push to the main branch

jobs:
  register-dataset:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: pip install -r week_3_mls/requirements.txt
      - name: Upload Dataset to Hugging Face Hub
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        # Run the data registration script as a module.
        run: python -m week_3_mls.model_building.data_register

  data-prep:
    needs: register-dataset
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: pip install -r week_3_mls/requirements.txt
      - name: Run Data Preparation
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        # Run the data preparation script as a module.
        run: python -m week_3_mls.model_building.prep

  model-traning:
    needs: data-prep
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: pip install -r week_3_mls/requirements.txt
      - name: Model Building
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        # Run the model training script as a module.
        run: python -m week_3_mls.model_building.train

  deploy-hosting:
    runs-on: ubuntu-latest
    needs: model-traning
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: pip install -r week_3_mls/requirements.txt
      - name: Push files to Frontend Hugging Face Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        # Run the deployment script as a module.
        run: python -m week_3_mls.hosting.hosting
